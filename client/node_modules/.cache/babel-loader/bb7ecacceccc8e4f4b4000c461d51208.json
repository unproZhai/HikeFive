{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Settings-Components/Edit-Events.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../common/Spinner';\nimport { getGroupByHandle } from '../../../actions/groupActions';\nimport GroupEvents from '../Sub-Components/GroupEvents';\n\nvar EditEvent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditEvent, _Component);\n\n  function EditEvent() {\n    _classCallCheck(this, EditEvent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EditEvent).apply(this, arguments));\n  }\n\n  _createClass(EditEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getGroupByHandle(this.props.match.params.handle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$group = this.props.group,\n          group = _this$props$group.group,\n          loading = _this$props$group.loading;\n      var EventContent;\n\n      if (group === null || loading) {\n        EventContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      } else {\n        if (Object.keys(group).length > 0) {\n          EventContent = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"d-flex justify-content-end col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/groupsettings/\".concat(group.handle),\n            className: \"btn btn-dark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \"Go Back\")), React.createElement(\"div\", {\n            className: \"d-flex justify-content-start col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/addEvent/\".concat(group.handle),\n            className: \"btn btn-dark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"Add Event\"))), React.createElement(\"div\", {\n            className: \"col-md-12 text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }), React.createElement(GroupEvents, {\n            group: group,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"edit trips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, EventContent))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditEvent;\n}(Component);\n\nEditEvent.propTypes = {\n  getGroupByHandle: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    group: state.group\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getGroupByHandle: getGroupByHandle\n})(EditEvent);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Settings-Components/Edit-Events.js"],"names":["React","Component","connect","Link","PropTypes","Spinner","getGroupByHandle","GroupEvents","EditEvent","props","match","params","handle","group","loading","EventContent","Object","keys","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../../common/Spinner';\nimport { getGroupByHandle } from '../../../actions/groupActions';\nimport GroupEvents from '../Sub-Components/GroupEvents';\n\nclass EditEvent extends Component {\n    componentDidMount() {\n        this.props.getGroupByHandle(this.props.match.params.handle);\n    }\n\n    render() {\n        const { group, loading } = this.props.group;\n\n        let EventContent;\n\n        if (group === null || loading) {\n            EventContent = <Spinner />;\n        }\n        else {\n            if (Object.keys(group).length > 0) {\n                EventContent = (\n                    <div>\n                        <div className=\"row\">\n                            <div className=\"d-flex justify-content-end col\">\n                                <Link to={`/groupsettings/${group.handle}`} className=\"btn btn-dark\">Go Back</Link>\n                            </div>\n                            <div className=\"d-flex justify-content-start col\">\n                                <Link to={`/addEvent/${group.handle}`} className=\"btn btn-dark\">Add Event</Link>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12 text-center\">\n                        </div><br />\n                        <GroupEvents group={group} />\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div className=\"edit trips\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">{EventContent}</div>\n                    </div>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n\nEditEvent.propTypes = {\n    getGroupByHandle: PropTypes.func.isRequired,\n    group: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    group: state.group,\n});\n\nexport default connect(mapStateToProps, { getGroupByHandle })(EditEvent);\n"]},"metadata":{},"sourceType":"module"}