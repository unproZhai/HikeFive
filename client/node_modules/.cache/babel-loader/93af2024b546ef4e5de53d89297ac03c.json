{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Main-Components/PostItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { deletePost, addLike, removeLike } from '../../../../actions/postActions';\nimport CommentWindow from '../Sub-Components/CommentWindow';\nimport CommentFeed from '../Sub-Components/CommentFeed';\nimport CommentWindowForm from '../Sub-Components/CommentWindowForm';\nimport { getPost } from '../../../../actions/postActions';\nimport defaultAvatar from '../../../../img/defaultAvatar.jpg';\n\nvar PostItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostItem, _React$Component);\n\n  function PostItem() {\n    var _this;\n\n    _classCallCheck(this, PostItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostItem).call(this));\n    _this.state = {\n      showReply: false,\n      updated: false\n    };\n    _this.updateLikes = _this.updateLikes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.findUserLike = _this.findUserLike.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostItem, [{\n    key: \"updateLikes\",\n    value: function updateLikes(id) {\n      var post = this.props.post;\n\n      if (this.findUserLike(post.likes)) {\n        if (!this.state.updated) {\n          post.likes.length = post.likes.length - 1;\n          this.props.removeLike(id);\n          this.setState(function () {\n            return {\n              updated: false\n            };\n          });\n        } else {\n          post.likes.length = post.likes.length + 1;\n          this.props.addLike(id);\n          this.setState(function () {\n            return {\n              updated: false\n            };\n          });\n        }\n      } else {\n        if (!this.state.updated) {\n          post.likes.length = post.likes.length + 1;\n          this.props.addLike(id);\n          this.setState(function () {\n            return {\n              updated: true\n            };\n          });\n        } else {\n          post.likes.length = post.likes.length - 1;\n          this.props.removeLike(id);\n          this.setState(function () {\n            return {\n              updated: false\n            };\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onCommentsClick\",\n    value: function onCommentsClick() {\n      this.setState({\n        showReply: !this.state.showReply\n      });\n    }\n  }, {\n    key: \"onDeleteClick\",\n    value: function onDeleteClick(id) {\n      this.props.deletePost(id);\n    }\n  }, {\n    key: \"findUserLike\",\n    value: function findUserLike(likes) {\n      var auth = this.props.auth;\n\n      if (likes.filter(function (like) {\n        return like.user === auth.user.id;\n      }).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          post = _this$props.post,\n          auth = _this$props.auth,\n          showActions = _this$props.showActions;\n\n      var moment = require('moment');\n\n      var fomatted_date = moment(post.date).format('LLL');\n      var short_date = moment(post.date).format('LT');\n      var postAvatar;\n      var commentsContent;\n\n      if (post.comments.length <= 3) {\n        commentsContent = React.createElement(CommentFeed, {\n          postId: post._id,\n          comments: post.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      } else {\n        commentsContent = React.createElement(CommentWindow, {\n          postId: post._id,\n          comments: post.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      if (post.avatar === '') {\n        postAvatar = defaultAvatar;\n      } else {\n        postAvatar = post.avatar;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"d-flex card card-body mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          width: '50px',\n          height: '50px'\n        },\n        className: \"rounded-circle  d-none d-sm-block d-md-none center\",\n        src: postAvatar,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        style: {\n          width: '75px',\n          height: '75px'\n        },\n        className: \"rounded-circle  d-none d-md-block center\",\n        src: postAvatar,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"d-flex text-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, post.name)), React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, post.text), React.createElement(\"p\", {\n        className: \"lead d-block d-sm-none text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, post.text), showActions ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, post.user === auth.user.id ? React.createElement(\"button\", {\n        onClick: this.onDeleteClick.bind(this, post._id),\n        type: \"button\",\n        className: \"btn btn-sm btn-danger mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Delete\") : null, \" \", \" \", React.createElement(Link, {\n        to: \"/post/\".concat(post._id),\n        className: \"btn btn-sm btn-light mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"View\"), React.createElement(\"button\", {\n        onClick: this.updateLikes.bind(this, post._id),\n        type: \"button\",\n        className: \"btn btn-sm btn-light mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: classnames('fas fa-thumbs-up', {\n          'text-info': this.findUserLike(post.likes)\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"badge badge-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, post.likes.length)), React.createElement(\"button\", {\n        onClick: this.onCommentsClick.bind(this, post._id),\n        type: \"button\",\n        className: \"btn btn-sm btn-light mr-1 d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Comments\")), this.state.showReply && commentsContent, this.state.showReply && React.createElement(CommentWindowForm, {\n        postId: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"blockquote-footer bottomcorner d-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, fomatted_date), React.createElement(\"div\", {\n        className: \"blockquote-footer bottomcorner d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, short_date)) : null)));\n    }\n  }]);\n\n  return PostItem;\n}(React.Component);\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  deletePost: PropTypes.func.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deletePost: deletePost,\n  addLike: addLike,\n  removeLike: removeLike,\n  getPost: getPost\n})(PostItem);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Main-Components/PostItem.js"],"names":["React","PropTypes","connect","classnames","Link","deletePost","addLike","removeLike","CommentWindow","CommentFeed","CommentWindowForm","getPost","defaultAvatar","PostItem","state","showReply","updated","updateLikes","bind","findUserLike","id","post","props","likes","length","setState","auth","filter","like","user","showActions","moment","require","fomatted_date","date","format","short_date","postAvatar","commentsContent","comments","_id","avatar","width","height","name","text","onDeleteClick","onCommentsClick","Component","defaultProps","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { deletePost, addLike, removeLike } from '../../../../actions/postActions';\nimport CommentWindow from '../Sub-Components/CommentWindow';\nimport CommentFeed from '../Sub-Components/CommentFeed';\nimport CommentWindowForm from '../Sub-Components/CommentWindowForm';\nimport { getPost } from '../../../../actions/postActions';\nimport defaultAvatar from '../../../../img/defaultAvatar.jpg';\n\nclass PostItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showReply: false,\n      updated: false\n    }\n    this.updateLikes = this.updateLikes.bind(this);\n    this.findUserLike = this.findUserLike.bind(this);\n  }\n\n  updateLikes(id) {\n    const { post } = this.props;\n    if (this.findUserLike(post.likes)) {\n      if (!this.state.updated) {\n        post.likes.length = post.likes.length - 1;\n        this.props.removeLike(id);\n        this.setState(() => {\n          return {\n            updated: false\n          };\n        });\n      } else {\n        post.likes.length = post.likes.length + 1;\n        this.props.addLike(id);\n        this.setState(() => {\n          return {\n            updated: false\n          };\n        });\n      }\n    }\n    else {\n      if (!this.state.updated) {\n        post.likes.length = post.likes.length + 1;\n        this.props.addLike(id);\n        this.setState(() => {\n          return {\n            updated: true\n          };\n        });\n      } else {\n        post.likes.length = post.likes.length - 1;\n        this.props.removeLike(id);\n        this.setState(() => {\n          return {\n            updated: false\n          };\n        });\n      }\n    }\n  }\n\n  onCommentsClick() {\n    this.setState({ showReply: !this.state.showReply })\n  }\n\n  onDeleteClick(id) {\n    this.props.deletePost(id);\n  }\n\n  findUserLike(likes) {\n    const { auth } = this.props;\n    if (likes.filter(like => like.user === auth.user.id).length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const { post, auth, showActions } = this.props;\n    var moment = require('moment');\n    var fomatted_date = moment(post.date).format('LLL');\n    var short_date = moment(post.date).format('LT');\n    var postAvatar;\n\n    let commentsContent;\n\n    if (post.comments.length <= 3) {\n      commentsContent = <CommentFeed postId={post._id} comments={post.comments} />;\n    } else {\n      commentsContent = <CommentWindow postId={post._id} comments={post.comments} />;\n    }\n\n    if(post.avatar === ''){\n      postAvatar = defaultAvatar;\n    }else {\n      postAvatar = post.avatar;\n    }\n\n    return (\n      <div className=\"d-flex card card-body mb-3\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n          <img\n              style={{ width: '50px' , height: '50px'}}\n              className=\"rounded-circle  d-none d-sm-block d-md-none center\"\n              src={postAvatar}\n              alt=\"\"\n            />\n            <img\n              style={{ width: '75px' , height: '75px'}}\n              className=\"rounded-circle  d-none d-md-block center\"\n              src={postAvatar}\n              alt=\"\"\n            />\n            <p className=\"d-flex text-center justify-content-center\">{post.name}</p>\n          </div>\n          <div className=\"col-md-10\">\n            <p className=\"lead d-none d-sm-block\">{post.text}</p>\n            <p className=\"lead d-block d-sm-none text-center\">{post.text}</p>\n            {showActions ? (\n              <div>\n                <span className=\"row\">\n                  {post.user === auth.user.id ? (\n                    <button\n                      onClick={this.onDeleteClick.bind(this, post._id)}\n                      type=\"button\"\n                      className=\"btn btn-sm btn-danger mr-1\"\n                    >\n                      Delete\n                  </button>\n                  ) : null} {\" \"}\n\n                  <Link to={`/post/${post._id}`} className=\"btn btn-sm btn-light mr-1\">\n                    View\n                </Link>\n                  <button\n                    onClick={this.updateLikes.bind(this, post._id)}\n                    type=\"button\"\n                    className=\"btn btn-sm btn-light mr-1\"\n                  >\n                    <i\n                      className={classnames('fas fa-thumbs-up', {\n                        'text-info': this.findUserLike(post.likes)\n                      })}\n                    />\n                    <span className=\"badge badge-light\">{post.likes.length}</span>\n                  </button>\n                  <button\n                    onClick={this.onCommentsClick.bind(this, post._id)}\n                    type=\"button\"\n                    className=\"btn btn-sm btn-light mr-1 d-none d-sm-block\">\n                    Comments\n                  </button>\n                </span>\n                {this.state.showReply && commentsContent}\n                {this.state.showReply && <CommentWindowForm postId={post._id} />}\n                <div className=\"blockquote-footer bottomcorner d-none d-sm-block\" >{fomatted_date}</div>\n                <div className=\"blockquote-footer bottomcorner d-block d-sm-none\" >{short_date}</div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  deletePost: PropTypes.func.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { deletePost, addLike, removeLike, getPost })(\n  PostItem\n);\n"]},"metadata":{},"sourceType":"module"}