{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PostItem from './Main-Components/PostItem';\nimport CommentForm from './Main-Components/CommentForm';\nimport CommentFeed from './Sub-Components/CommentFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPost } from '../../../actions/postActions';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Post).apply(this, arguments));\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPost(this.props.match.params.id);\n\n      if (this.props.location.state) {\n        if (this.props.location.state.reload === 0) {\n          window.location.reload();\n          this.props.history.push({\n            pathname: \"/post/\".concat(this.props.match.params.id),\n            state: {\n              reload: 1\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          post = _this$props$post.post,\n          loading = _this$props$post.loading;\n      var postContent;\n\n      if (post === null || loading || Object.keys(post).length === 0) {\n        postContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      } else {\n        postContent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(PostItem, {\n          post: post,\n          showActions: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(CommentFeed, {\n          postId: post._id,\n          comments: post.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), React.createElement(CommentForm, {\n          postId: post._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fb-comments\",\n        \"data-href\": this.props.url,\n        \"data-width\": \"100%\",\n        \"data-numposts\": \"10\",\n        \"data-order-by\": \"reverse_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/feed\",\n        className: \"btn btn-dark mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Back To Feed\"), postContent))));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost: getPost\n})(Post);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Post.js"],"names":["React","Component","connect","Link","PropTypes","PostItem","CommentForm","CommentFeed","Spinner","getPost","Post","props","match","params","id","location","state","reload","window","history","push","pathname","post","loading","postContent","Object","keys","length","_id","comments","url","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PostItem from './Main-Components/PostItem';\nimport CommentForm from './Main-Components/CommentForm';\nimport CommentFeed from './Sub-Components/CommentFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPost } from '../../../actions/postActions';\n\nclass Post extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n    if (this.props.location.state) {\n      if (this.props.location.state.reload === 0) {\n        window.location.reload();\n        this.props.history.push({\n          pathname: `/post/${this.props.match.params.id}`,\n          state: { reload: 1 }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { post, loading } = this.props.post;\n\n    let postContent;\n    \n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = <Spinner />;\n    } else {\n\n      postContent = (\n        <div>\n          <PostItem post={post} showActions={false} />\n          <CommentFeed postId={post._id} comments={post.comments} />\n          <CommentForm postId={post._id} />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"post\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"fb-comments\"\n                data-href={this.props.url}\n                data-width=\"100%\"\n                data-numposts=\"10\"\n                data-order-by=\"reverse_time\">\n              </div>\n              <Link to=\"/feed\" className=\"btn btn-dark mb-3\">\n                Back To Feed\n              </Link>\n              {postContent}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n"]},"metadata":{},"sourceType":"module"}