{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostForm from './Sub-Components/PostForm';\nimport PostFeed from './Main-Components/PostFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPosts } from '../../../actions/postActions';\nimport { withRouter } from 'react-router-dom';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          posts = _this$props$post.posts,\n          loading = _this$props$post.loading;\n      var postContent;\n\n      if (posts === null || loading) {\n        postContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      } else {\n        postContent = React.createElement(PostFeed, {\n          posts: posts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(PostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), postContent))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPosts: getPosts\n})(withRouter(Posts));","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/post/main-posts/Posts.js"],"names":["React","Component","PropTypes","connect","PostForm","PostFeed","Spinner","getPosts","withRouter","Posts","props","post","posts","loading","postContent","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEMC,K;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWH,QAAX;AACD;;;6BAEQ;AAAA,6BACoB,KAAKG,KAAL,CAAWC,IAD/B;AAAA,UACCC,KADD,oBACCA,KADD;AAAA,UACQC,OADR,oBACQA,OADR;AAGP,UAAIC,WAAJ;;AAEA,UAAIF,KAAK,KAAK,IAAV,IAAkBC,OAAtB,EAA+B;AAC7BC,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGE,WAFH,CADF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;;;;EA7BiBb,S;;AAgCpBQ,KAAK,CAACM,SAAN,GAAkB;AAChBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,IAAV,CAAeC,UADT;AAEhBN,EAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAAEZ,EAAAA,QAAQ,EAARA;AAAF,CAAlB,CAAP,CAAuCC,UAAU,CAACC,KAAD,CAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostForm from './Sub-Components/PostForm';\nimport PostFeed from './Main-Components/PostFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPosts } from '../../../actions/postActions';\nimport { withRouter } from 'react-router-dom';\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    const { posts, loading } = this.props.post;\n\n    let postContent;\n\n    if (posts === null || loading) {\n      postContent = <Spinner />;\n    } else {\n      postContent = <PostFeed posts={posts} />;\n    }\n\n    return (\n      <div className=\"feed\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <PostForm />\n              {postContent}\n            </div>\n          </div>\n        </div>\n        <br />\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(withRouter(Posts));\n"]},"metadata":{},"sourceType":"module"}