{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_ERRORS, CLEAR_ERRORS, GET_POSTS, GET_POST, POST_LOADING, DELETE_POST } from './types'; //====================================================================================\n\n/*\n  FUNCTIONS:\n    - addPersonalPost\n    - getPersonalPosts\n    - getPersonalPost\n    - deletePersonalPost\n    - addPersonalLike\n    - removePersonalLike\n    - addPersonalComment\n    - deletePersonalComment\n    - addPersonalNEWComment\n    - deletePersonaNEWComment\n    - addPost\n    - getPosts\n    - getPost\n    - deletePost\n    - addLike\n    - removeLike\n    - addComment\n    - deleteComment\n    - addNEWComment\n    - deleteNEWComment\n    - setPostLoading\n    - clearErrors\n*/\n//====================================================================================\n// Add Personal Posts\n\nexport var addPersonalPost = function addPersonalPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post('/api/posts/personal', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get Personal Posts\n\nexport var getPersonalPosts = function getPersonalPosts(handle) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.post('/api/posts/getpersonal', handle = {\n      handle: handle\n    }).then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (_err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: null\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPersonalPost = function getPersonalPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/getpersonal/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (_err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: null\n      });\n    });\n  };\n}; // Delete Post\n\nexport var deletePersonalPost = function deletePersonalPost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/delete/\".concat(id)).then(function (_res) {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add like\n\nexport var addPersonalLike = function addPersonalLike(postId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/personal/\".concat(postId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Remove like\n\nexport var removePersonalLike = function removePersonalLike(postId) {\n  return function (dispatch) {\n    axios.post(\"api/posts/unlike/personal/\".concat(postId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addPersonalComment = function addPersonalComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/personal/\".concat(postId), commentData).then(function (_res) {\n      return dispatch(getPersonalPost());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete Comment\n\nexport var deletePersonalComment = function deletePersonalComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/personal/\".concat(postId, \"/\").concat(commentId)).then(function (_res) {\n      return dispatch(getPersonalPost());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Non-refresh Comment\n\nexport var addPersonalNEWComment = function addPersonalNEWComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/personal/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post('/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get Posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get('/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (_err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (_err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Delete Post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (_res) {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(postId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(postId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Remove Like\n\nexport var removeLike = function removeLike(postId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(postId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (_res) {\n      return dispatch(getPost());\n    }).catch(function (_err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: null\n      });\n    });\n  };\n}; // Delete Comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (_res) {\n      return dispatch(getPost());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Non-refresh Comment\n\nexport var addNEWComment = function addNEWComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/actions/postActions.js"],"names":["axios","ADD_POST","GET_ERRORS","CLEAR_ERRORS","GET_POSTS","GET_POST","POST_LOADING","DELETE_POST","addPersonalPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPersonalPosts","handle","setPostLoading","_err","getPersonalPost","id","get","deletePersonalPost","delete","_res","addPersonalLike","postId","removePersonalLike","addPersonalComment","commentData","deletePersonalComment","commentId","addPersonalNEWComment","addPost","getPosts","getPost","deletePost","addLike","removeLike","addComment","deleteComment","addNEWComment"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  ADD_POST,\n  GET_ERRORS,\n  CLEAR_ERRORS,\n  GET_POSTS,\n  GET_POST,\n  POST_LOADING,\n  DELETE_POST\n} from './types';\n\n//====================================================================================\n\n/*\n  FUNCTIONS:\n    - addPersonalPost\n    - getPersonalPosts\n    - getPersonalPost\n    - deletePersonalPost\n    - addPersonalLike\n    - removePersonalLike\n    - addPersonalComment\n    - deletePersonalComment\n    - addPersonalNEWComment\n    - deletePersonaNEWComment\n    - addPost\n    - getPosts\n    - getPost\n    - deletePost\n    - addLike\n    - removeLike\n    - addComment\n    - deleteComment\n    - addNEWComment\n    - deleteNEWComment\n    - setPostLoading\n    - clearErrors\n*/\n\n//====================================================================================\n\n\n// Add Personal Posts\nexport const addPersonalPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post('/api/posts/personal', postData)\n    .then(res =>\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Get Personal Posts\nexport const getPersonalPosts = handle => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .post('/api/posts/getpersonal', handle = { handle })\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      })\n    )\n    .catch(_err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: null\n      })\n    );\n};\n\n// Get Post\nexport const getPersonalPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(`/api/posts/getpersonal/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(_err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: null\n      })\n    );\n};\n\n// Delete Post\nexport const deletePersonalPost = id => dispatch => {\n  axios\n    .delete(`/api/posts/delete/${id}`)\n    .then(_res =>\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add like\nexport const addPersonalLike = postId => dispatch => {\n  axios\n    .post(`/api/posts/like/personal/${postId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Remove like\nexport const removePersonalLike = postId => dispatch => {\n  axios\n    .post(`api/posts/unlike/personal/${postId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const addPersonalComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/personal/${postId}`, commentData)\n    .then(_res =>\n      dispatch(getPersonalPost())\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Delete Comment\nexport const deletePersonalComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(`/api/posts/comment/personal/${postId}/${commentId}`)\n    .then(_res =>\n      dispatch(getPersonalPost())\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Non-refresh Comment\nexport const addPersonalNEWComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/personal/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\n// Add Post\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post('/api/posts', postData)\n    .then(res =>\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get('/api/posts')\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      })\n    )\n    .catch(_err =>\n      dispatch({\n        type: GET_POSTS,\n        payload: null\n      })\n    );\n};\n\n// Get Post\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(_err =>\n      dispatch({\n        type: GET_POST,\n        payload: null\n      })\n    );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n  axios\n    .delete(`/api/posts/${id}`)\n    .then(_res =>\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Like\nexport const addLike = postId => dispatch => {\n  axios\n    .post(`/api/posts/like/${postId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Remove Like\nexport const removeLike = postId => dispatch => {\n  axios\n    .post(`/api/posts/unlike/${postId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/${postId}`, commentData)\n    .then(_res =>\n      dispatch(getPost())\n    )\n    .catch(_err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: null\n      })\n    );\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(`/api/posts/comment/${postId}/${commentId}`)\n    .then(_res =>\n      dispatch(getPost())\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Non-refresh Comment\nexport const addNEWComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}