{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/groups/UserGroups.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\nimport GroupItem from './GroupItem';\nimport { searchBelongGroups } from '../../actions/groupActions';\n\nvar Groups =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Groups, _Component);\n\n  function Groups() {\n    _classCallCheck(this, Groups);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Groups).apply(this, arguments));\n  }\n\n  _createClass(Groups, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.searchBelongGroups(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$group = this.props.group,\n          groups = _this$props$group.groups,\n          loading = _this$props$group.loading;\n      var groupItems;\n\n      if (groups === null || loading) {\n        groupItems = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else {\n        if (groups.length > 0) {\n          groupItems = groups.map(function (group) {\n            return React.createElement(GroupItem, {\n              key: group._id,\n              group: group,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            });\n          });\n        } else {\n          groupItems = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \"No groups found...\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"groups\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Joined Groups\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"List of Joined Groups\"), groupItems))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Groups;\n}(Component);\n\nGroups.propTypes = {\n  searchBelongGroups: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    group: state.group\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchBelongGroups: searchBelongGroups\n})(Groups);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/groups/UserGroups.js"],"names":["React","Component","connect","PropTypes","Spinner","GroupItem","searchBelongGroups","Groups","props","match","params","id","group","groups","loading","groupItems","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;;IAEMC,M;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWF,kBAAX,CAA8B,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAtD;AACH;;;6BAEQ;AAAA,8BACuB,KAAKH,KAAL,CAAWI,KADlC;AAAA,UACGC,MADH,qBACGA,MADH;AAAA,UACWC,OADX,qBACWA,OADX;AAEL,UAAIC,UAAJ;;AAEA,UAAIF,MAAM,KAAK,IAAX,IAAmBC,OAAvB,EAAgC;AAC5BC,QAAAA,UAAU,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACH,OAFD,MAEO;AACH,YAAIF,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACnBD,UAAAA,UAAU,GAAGF,MAAM,CAACI,GAAP,CAAW,UAAAL,KAAK;AAAA,mBACzB,oBAAC,SAAD;AAAW,cAAA,GAAG,EAAEA,KAAK,CAACM,GAAtB;AAA2B,cAAA,KAAK,EAAEN,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADyB;AAAA,WAAhB,CAAb;AAGH,SAJD,MAIO;AACHG,UAAAA,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAb;AACH;AACJ;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAKKA,UALL,CADJ,CADJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAgBH;;;;EArCgBd,S;;AAwCrBM,MAAM,CAACY,SAAP,GAAmB;AACfb,EAAAA,kBAAkB,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADpB;AAEfT,EAAAA,KAAK,EAAET,SAAS,CAACmB,MAAV,CAAiBD;AAFT,CAAnB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADiB,GAAL;AAAA,CAA7B;;AAIA,eAAeV,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA,kBAAkB,EAAlBA;AAAF,CAAlB,CAAP,CAAiDC,MAAjD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\nimport GroupItem from './GroupItem';\nimport { searchBelongGroups } from '../../actions/groupActions';\n\nclass Groups extends Component {\n    componentDidMount() {\n        this.props.searchBelongGroups(this.props.match.params.id);\n    }\n\n    render() {\n        const { groups, loading } = this.props.group;\n        let groupItems;\n\n        if (groups === null || loading) {\n            groupItems = <Spinner />;\n        } else {\n            if (groups.length > 0) {\n                groupItems = groups.map(group => (\n                    <GroupItem key={group._id} group={group} />\n                ));\n            } else {\n                groupItems = <h4>No groups found...</h4>;\n            }\n        }\n\n        return (\n            <div className=\"groups\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Joined Groups</h1>\n                            <p className=\"lead text-center\">\n                                List of Joined Groups\n                            </p>\n                            {groupItems}\n                        </div>\n                    </div>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n\nGroups.propTypes = {\n    searchBelongGroups: PropTypes.func.isRequired,\n    group: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    group: state.group\n});\n\nexport default connect(mapStateToProps, { searchBelongGroups })(Groups);\n"]},"metadata":{},"sourceType":"module"}