{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Sub-Components/Calendar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getGroupByHandle } from '../../../actions/groupActions';\nimport { format, compareAsc } from 'date-fns';\nimport NowEvent from './NowEvent';\nimport dateFns from \"date-fns\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date()\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var dateFormat = \"MMMM YYYY\";\n      return React.createElement(\"div\", {\n        className: \"header row  text-center flex-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Previous Month\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, dateFns.format(this.state.currentMonth, dateFormat))), React.createElement(\"div\", {\n        className: \"col col-end\",\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Next Month\")));\n    }\n  }, {\n    key: \"renderHeaderMobile\",\n    value: function renderHeaderMobile() {\n      var dateFormat = \"MMM YY\";\n      return React.createElement(\"div\", {\n        className: \"header row  text-center flex-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Prev\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, dateFns.format(this.state.currentMonth, dateFormat))), React.createElement(\"div\", {\n        className: \"col col-end\",\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Next\")));\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {\n      var dateFormat = \"dddd\";\n      var days = [];\n      var startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n      for (var i = 0; i < 7; i++) {\n        days.push(React.createElement(\"div\", {\n          className: \"col col-center text-center\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"days row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, days);\n    }\n  }, {\n    key: \"renderDaysMobile\",\n    value: function renderDaysMobile() {\n      var dateFormat = \"dd\";\n      var days = [];\n      var startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n      for (var i = 0; i < 7; i++) {\n        days.push(React.createElement(\"div\", {\n          className: \"col col-center text-center\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"days row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, days);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells() {\n      var _this2 = this;\n\n      var currentMonth = this.state.currentMonth;\n      var monthStart = dateFns.startOfMonth(currentMonth);\n      var monthEnd = dateFns.endOfMonth(monthStart);\n      var startDate = dateFns.startOfWeek(monthStart);\n      var endDate = dateFns.endOfWeek(monthEnd);\n      var dateFormat = \"D\";\n      var rows = [];\n      var days = [];\n      var day = startDate;\n      var formattedDate = \"\";\n\n      while (day <= endDate) {\n        var _loop = function _loop(i) {\n          formattedDate = dateFns.format(day, dateFormat);\n          var cloneDay = day;\n          days.push(React.createElement(\"div\", {\n            className: \"col cell \".concat(!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : _this2.hasEventOnDay(day) ? \"selected\" : \"\"),\n            key: day,\n            onClick: function onClick() {\n              return _this2.onDateClick(dateFns.parse(cloneDay));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, formattedDate), React.createElement(\"span\", {\n            className: \"bg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, formattedDate)));\n          day = dateFns.addDays(day, 1);\n        };\n\n        for (var i = 0; i < 7; i++) {\n          _loop(i);\n        }\n\n        rows.push(React.createElement(\"div\", {\n          className: \"row\",\n          key: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, days));\n        days = [];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, rows);\n    }\n  }, {\n    key: \"hasEventOnDay\",\n    value: function hasEventOnDay(day) {\n      var eventLength = this.props.group.group.events.length;\n\n      for (var i = 0; i < eventLength; i++) {\n        var startEvent = format(this.props.group.group.events[i].start, 'MM/DD/YYYY');\n        var nowDate = format(day, 'MM/DD/YYYY');\n        var result = compareAsc(startEvent, nowDate);\n\n        if (result === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedDate = this.state.selectedDate;\n      var eventLength = this.props.group.group.events.length;\n      var eventArray = [];\n      var eventsContent;\n\n      for (var i = 0; i < eventLength; i++) {\n        var startEvent = format(this.props.group.group.events[i].start, 'MM/DD/YYYY');\n        var nowDate = format(selectedDate, 'MM/DD/YYYY');\n        var result = compareAsc(startEvent, nowDate);\n\n        if (result === 0) {\n          eventArray.push(this.props.group.group.events[i]);\n        }\n      }\n\n      var eventL = eventArray.length;\n\n      if (eventL > 0) {\n        eventsContent = eventArray.map(function (evt) {\n          return React.createElement(NowEvent, {\n            evt: evt,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          });\n        });\n      } else {\n        eventsContent = React.createElement(\"div\", {\n          className: \"d-flex list-group-item justify-content-center align-items-center flex-column bg-light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"There is no event for this date\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-block d-md-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.renderHeaderMobile(), this.renderDaysMobile(), this.renderCells()), React.createElement(\"div\", {\n        className: \"d-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.renderHeader(), this.renderDays(), this.renderCells()), eventsContent);\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nCalendar.propTypes = {\n  getGroupByHandle: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    group: state.group\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getGroupByHandle: getGroupByHandle\n})(Calendar);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Sub-Components/Calendar.js"],"names":["React","connect","PropTypes","getGroupByHandle","format","compareAsc","NowEvent","dateFns","Calendar","state","currentMonth","Date","selectedDate","onDateClick","day","setState","nextMonth","addMonths","prevMonth","subMonths","dateFormat","days","startDate","startOfWeek","i","push","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","isSameMonth","hasEventOnDay","parse","eventLength","props","group","events","length","startEvent","start","nowDate","result","eventArray","eventsContent","eventL","map","evt","renderHeaderMobile","renderDaysMobile","renderCells","renderHeader","renderDays","Component","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getGroupByHandle } from '../../../actions/groupActions';\nimport { format, compareAsc } from 'date-fns';\nimport NowEvent from './NowEvent';\nimport dateFns from \"date-fns\";\n\nclass Calendar extends React.Component {\n  state = {\n    currentMonth: new Date(),\n    selectedDate: new Date()\n  };\n\n  renderHeader() {\n    const dateFormat = \"MMMM YYYY\";\n\n    return (\n      <div className=\"header row  text-center flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={this.prevMonth}>\n            Previous Month\n          </div>\n        </div>\n        <div className=\"col col-center\">\n          <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\n        </div>\n        <div className=\"col col-end\" onClick={this.nextMonth}>\n          <div className=\"icon\">Next Month</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderHeaderMobile() {\n    const dateFormat = \"MMM YY\";\n\n    return (\n      <div className=\"header row  text-center flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={this.prevMonth}>\n            Prev\n          </div>\n        </div>\n        <div className=\"col col-center\">\n          <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\n        </div>\n        <div className=\"col col-end\" onClick={this.nextMonth}>\n          <div className=\"icon\">Next</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"dddd\";\n    const days = [];\n\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center text-center\" key={i}>\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  }\n\n  renderDaysMobile() {\n    const dateFormat = \"dd\";\n    const days = [];\n\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center text-center\" key={i}>\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n    return <div className=\"days row\">{days}</div>;\n  }\n\n  renderCells() {\n    const { currentMonth } = this.state;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    const dateFormat = \"D\";\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell ${\n              !dateFns.isSameMonth(day, monthStart)\n                ? \"disabled\"\n                : this.hasEventOnDay(day) ? \"selected\" : \"\"\n              }`}\n            key={day}\n            onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n          >\n            <span className=\"number\">{formattedDate}</span>\n            <span className=\"bg\">{formattedDate}</span>\n          </div>\n        );\n        day = dateFns.addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  }\n\n  onDateClick = day => {\n    this.setState({\n      selectedDate: day,\n    });\n  };\n\n  nextMonth = () => {\n    this.setState({\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  prevMonth = () => {\n    this.setState({\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  hasEventOnDay(day) {\n    var eventLength = this.props.group.group.events.length;\n    for (let i = 0; i < eventLength; i++) {\n      const startEvent = format(this.props.group.group.events[i].start, 'MM/DD/YYYY');\n      const nowDate = format(day, 'MM/DD/YYYY');\n\n      var result = compareAsc(\n        startEvent,\n        nowDate\n      );\n      if (result === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    const { selectedDate } = this.state;\n    var eventLength = this.props.group.group.events.length;\n    const eventArray = [];\n\n    let eventsContent;\n\n    for (let i = 0; i < eventLength; i++) {\n      const startEvent = format(this.props.group.group.events[i].start, 'MM/DD/YYYY');\n      const nowDate = format(selectedDate, 'MM/DD/YYYY');\n\n      var result = compareAsc(\n        startEvent,\n        nowDate\n      );\n      if (result === 0) {\n        eventArray.push(this.props.group.group.events[i]);\n      }\n    }\n\n    var eventL = eventArray.length;\n\n    if (eventL > 0) {\n      eventsContent = eventArray.map(evt => (<NowEvent evt={evt} />));\n    } else {\n      eventsContent = <div className=\"d-flex list-group-item justify-content-center align-items-center flex-column bg-light\">There is no event for this date</div>;\n    }\n\n\n    return (\n      <div className=\"calendar\">\n        <div className=\"d-block d-md-none\">\n          {this.renderHeaderMobile()}\n          {this.renderDaysMobile()}\n          {this.renderCells()}\n        </div>\n        <div className=\"d-none d-md-block\">\n          {this.renderHeader()}\n          {this.renderDays()}\n          {this.renderCells()}\n        </div>\n        {eventsContent}\n      </div>\n    );\n  }\n}\n\nCalendar.propTypes = {\n  getGroupByHandle: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  group: state.group\n});\n\nexport default connect(mapStateToProps, { getGroupByHandle })(Calendar);"]},"metadata":{},"sourceType":"module"}