{"ast":null,"code":"import _classCallCheck from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinshuangzhai/Desktop/HikeFive/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Sub-Components/GroupFeed.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PersonPostForm from '../../post/user-posts/Sub-Components/PersonPostForm';\nimport PersonPostFeed from '../../post/user-posts/Main-Components/PersonPostFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPersonalPosts } from '../../../actions/postActions';\n\nvar ProfileFeed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileFeed, _Component);\n\n  function ProfileFeed() {\n    _classCallCheck(this, ProfileFeed);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileFeed).apply(this, arguments));\n  }\n\n  _createClass(ProfileFeed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPersonalPosts(this.props.group);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          posts = _this$props$post.posts,\n          loading = _this$props$post.loading;\n      var handle = this.props.group;\n      var postContent;\n\n      if (posts === null || loading) {\n        postContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      } else {\n        postContent = React.createElement(PersonPostFeed, {\n          handle: handle,\n          posts: posts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"groupFeed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(PersonPostForm, {\n        handle: handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), postContent)));\n    }\n  }]);\n\n  return ProfileFeed;\n}(Component);\n\nProfileFeed.propTypes = {\n  getPersonalPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPersonalPosts: getPersonalPosts\n})(ProfileFeed);","map":{"version":3,"sources":["/Users/xinshuangzhai/Desktop/HikeFive/client/src/components/group/Sub-Components/GroupFeed.js"],"names":["React","Component","connect","PropTypes","PersonPostForm","PersonPostFeed","Spinner","getPersonalPosts","ProfileFeed","props","group","post","posts","loading","handle","postContent","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,qDAA3B;AACA,OAAOC,cAAP,MAA2B,sDAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;IAEMC,W;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,gBAAX,CAA4B,KAAKE,KAAL,CAAWC,KAAvC;AACD;;;6BAEQ;AAAA,6BACoB,KAAKD,KAAL,CAAWE,IAD/B;AAAA,UACCC,KADD,oBACCA,KADD;AAAA,UACQC,OADR,oBACQA,OADR;AAEP,UAAMC,MAAM,GAAG,KAAKL,KAAL,CAAWC,KAA1B;AAEA,UAAIK,WAAJ;;AAEA,UAAIH,KAAK,KAAK,IAAV,IAAkBC,OAAtB,EAA+B;AAC7BE,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,GAAG,oBAAC,cAAD;AAAgB,UAAA,MAAM,EAAED,MAAxB;AAAgC,UAAA,KAAK,EAAEF,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGC,WAFH,CADF,CADF,CADF;AAUD;;;;EA3BuBd,S;;AA8B1BO,WAAW,CAACQ,SAAZ,GAAwB;AACtBT,EAAAA,gBAAgB,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UADX;AAEtBP,EAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD;AAFD,CAAxB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeT,OAAO,CAACkB,eAAD,EAAkB;AAAEb,EAAAA,gBAAgB,EAAhBA;AAAF,CAAlB,CAAP,CAA+CC,WAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PersonPostForm from '../../post/user-posts/Sub-Components/PersonPostForm';\nimport PersonPostFeed from '../../post/user-posts/Main-Components/PersonPostFeed';\nimport Spinner from '../../common/Spinner';\nimport { getPersonalPosts } from '../../../actions/postActions';\n\nclass ProfileFeed extends Component {\n  componentDidMount() {\n    this.props.getPersonalPosts(this.props.group);\n  }\n\n  render() {\n    const { posts, loading } = this.props.post;\n    const handle = this.props.group;\n\n    let postContent;\n\n    if (posts === null || loading) {\n      postContent = <Spinner />;\n    } else {\n      postContent = <PersonPostFeed handle={handle} posts={posts} />;\n    }\n\n    return (\n      <div className=\"groupFeed\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <PersonPostForm handle={handle} />\n            {postContent}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfileFeed.propTypes = {\n  getPersonalPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPersonalPosts })(ProfileFeed);\n"]},"metadata":{},"sourceType":"module"}